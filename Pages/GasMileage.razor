
<div class="input-group mb-3">
    <span class="input-group-text">オドメーター</span>
    <!--<label for="odo" class="form-label">オドメーター：</label>-->
    <input id="odo" type="number" @bind="newItem.Odometer" class="form-control" style="text-align:right"/>
    <span class="input-group-text">km</span>
</div>
<div class="input-group mb-3">
    <span class="input-group-text">給油量</span>
    <!--<label for="oil" class="form-label">給油量：</label>-->
    <input id="oil" type="number" step="0.01" @bind="newItem.OilingQuantity" class="form-control" style="text-align:right"/>
    <span class="input-group-text">L&nbsp;</span>
</div>

<button @onclick="AddGasMileage" class="btn btn-primary">計算</button>
<!--
オドメータ：
<input type="number" step="0.1" @bind="newItem.Odometer" style="text-align:right" />
給油量：
<input type="number" step="0.01" @bind="newItem.OilingQuantity" style="text-align:right"  />
-->

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>オドメーター</th>
                <th>走行距離</th>
                <th>給油量</th>
                <th>燃費</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items.Reverse<GasMileageItem>())
            {
                <tr>
                    <td style="text-align:right;">@item.GetOdometerString()</td>
                    <td style="text-align:right;">@item.GetMileageString()</td>
                    <td style="text-align:right;">@item.GetOilingQuantityString()</td>
                    <td style="text-align:right;">@item.getGasMileageString()</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<GasMileageItem> items = new();
    private GasMileageItem newItem = new();

    private void AddGasMileage()
    {
        if (newItem.Odometer > 0)
        {
            // 丸め処理
            newItem.Odometer = Math.Round(newItem.Odometer, 1);
            newItem.OilingQuantity = Math.Round(newItem.OilingQuantity, 2);
            if (items.Count > 0)
            {
                
                var previousOdo = items[^1].Odometer;
                newItem.Mileage = newItem.Odometer - previousOdo;

                var mil = Convert.ToDecimal(newItem.Mileage);
                var oil = Convert.ToDecimal(newItem.OilingQuantity);
                var gas = decimal.Round(decimal.Divide(mil, oil), 2);
                newItem.GasMileage = decimal.ToDouble((gas));
            }
            items.Add(newItem);
            newItem = new GasMileageItem();
        }
    }
}